{"version":3,"file":"static/js/186.4b6cb461.chunk.js","mappings":"wOAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,MAAYD,QAU5B,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GACnBI,MAAK,SAAAC,GACJN,EAAWM,EAAKC,YAEjBC,OAAM,SAAAC,GAAK,OAAIA,OAEjB,KAED,8BACGV,EAAQW,OAAS,GAChB,wBACGX,EAAQY,KAAI,SAAAC,GAAI,OACf,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,UAOlB","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSerchedMovieReview } from 'utils/moviesApi';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const movieId = useParams().movieId;\n\n  useEffect(() => {\n    getSerchedMovieReview(movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => error);\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(item => (\n            <li key={item.id}>\n              <h4>Author: {item.author}</h4>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getSerchedMovieReview","then","data","results","catch","error","length","map","item","author","content","id"],"sourceRoot":""}