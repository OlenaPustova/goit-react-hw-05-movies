{"version":3,"file":"static/js/75.e24b9e77.chunk.js","mappings":"+NACA,K,SCIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,MAAYD,QAW5B,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GACnBI,MAAK,SAAAC,GACJN,EAAWM,EAAKC,YAEjBC,OAAM,SAAAC,GAAK,OAAIA,OAEjB,KAGD,8BACGV,GACC,eAAIW,UAAWC,EAAAA,KAAf,SACGZ,EAAQa,KAAI,SAAAC,GAAI,OACf,gBAAkBH,UAAWC,EAAAA,OAA7B,WACE,qCAAaE,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,UAOlB","sources":["components/Reviews/Reviews.module.scss","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSerchedMovieReview } from 'utils/moviesApi';\nimport s from './Reviews.module.scss';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState();\n  const movieId = useParams().movieId;\n\n  useEffect(() => {\n    getSerchedMovieReview(movieId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => error);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {reviews ? (\n        <ul className={s.list}>\n          {reviews.map(item => (\n            <li key={item.id} className={s.review}>\n              <h4>Author: {item.author}</h4>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getSerchedMovieReview","then","data","results","catch","error","className","s","map","item","author","content","id"],"sourceRoot":""}